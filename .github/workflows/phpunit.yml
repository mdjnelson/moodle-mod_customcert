--- # 2022 05 26

name: "PHPUnit"
on:
  pull_request:
    branches:
      - master
      - main

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  MOODLE_LOCAL: moodle-dev
  CACHE_VERSION: ${{ secrets.CACHE_VERSION }}

#concurrency:
#  group: ${{ github.ref_name }}
#  cancel-in-progress: true

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      plugin_repo: ${{ steps.config.outputs.PLUGIN_REPO }}
      plugin_ref: ${{ steps.config.outputs.PLUGIN_REF }}
      plugin_path: ${{ steps.config.outputs.PLUGIN_PATH }}

    steps:

      - name: "devops: checkout"
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: Aprende-com/devops-actions
          path: devops-actions
          token: ${{ env.GITHUB_TOKEN }}

      - run: |
          echo "PLUGIN_REPO=$GITHUB_REPOSITORY" | tee -a "${GITHUB_ENV}"
          echo "PLUGIN_REF=$GITHUB_HEAD_REF" | tee -a "${GITHUB_ENV}"

      - uses: ./devops-actions/lms/plugin-getpath

      - id: config
        run: |
          echo "::set-output name=PLUGIN_REPO::${PLUGIN_REPO}"
          echo "::set-output name=PLUGIN_REF::${PLUGIN_REF}"
          echo "::set-output name=PLUGIN_PATH::${PLUGIN_PATH}"

  #
  #
  #
  cache:
    runs-on: ubuntu-latest
    needs: [config]

    env:
      CACHE_NAME: "${{ needs.config.outputs.plugin_ref }}-${{ secrets.CACHE_VERSION }}"
    
    outputs:
      cache_name: ${{ env.CACHE_NAME }}

    steps:

      - uses: actions/cache@v3
        id: cache
        with: 
          path: moodle-dev
          key: ${{ env.CACHE_NAME }}

      - name: "devops: checkout"
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: Aprende-com/devops-actions
          path: devops-actions
          token: ${{ env.GITHUB_TOKEN }}

      - name: "setting up runner"
        if: steps.cache.outputs.cache-hit != 'true'
        uses: ./devops-actions/lms/runner-config

      - name: "cloning moodle-dev"
        if: steps.cache.outputs.cache-hit != 'true'
        uses: ./devops-actions/lms/core-clone
        with:
          submodules: true

      - name: "cloning plugin"
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          token: ${{ env.GITHUB_TOKEN }}
          repository: ${{ needs.config.outputs.plugin_repo }}
          path: moodle-dev/${{ needs.config.outputs.plugin_path }}
          ref: ${{ needs.config.outputs.plugin_ref }}

      - name: "running grunt"
        if: steps.cache.outputs.cache-hit != 'true'
        uses: ./devops-actions/lms/grunt

      - name: "running composer"
        if: steps.cache.outputs.cache-hit != 'true'
        uses: ./devops-actions/lms/composer

  #
  #
  #
  phpunit:
    runs-on: ubuntu-latest
    needs: [config, cache]

    env:
      CACHE_NAME: "${{ needs.config.outputs.plugin_ref }}-${{ secrets.CACHE_VERSION }}"
      PLUGIN_REPO: ${{ needs.config.outputs.plugin_repo }}
      PLUGIN_REF: ${{ needs.config.outputs.plugin_ref }}
      PLUGIN_PATH: ${{ needs.config.outputs.plugin_path }}

    steps:

      - uses: actions/cache@v3
        id: cache
        with: 
          path: moodle-dev
          key: ${{ env.CACHE_NAME }}

      - name: "devops: checkout"
        uses: actions/checkout@v2
        with:
          repository: Aprende-com/devops-actions
          path: devops-actions
          token: ${{ env.GITHUB_TOKEN }}

      - name: "setting up runner"
        uses: ./devops-actions/lms/runner-config

      - name: "plugin: clone"
        uses: actions/checkout@v2
        with:
          token: ${{ env.GITHUB_TOKEN }}
          repository: ${{ env.PLUGIN_REPO }}
          path: moodle-dev/${{ env.PLUGIN_PATH }}
          ref: ${{ env.PLUGIN_REF }}

      - name: "plugin: run grunt"
        uses: ./devops-actions/lms/plugin/grunt

      - name: "plugin: run composer"
        uses: ./devops-actions/lms/plugin/composer

      - name: "Run PHPUnit"
        uses: ./devops-actions/lms/plugin-phpunit

        #      - if: always()
        #        uses: hmarr/debug-action@v2

